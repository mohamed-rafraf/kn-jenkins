apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: devops-jenkins
  namespace: kubesphere-system
spec:

  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: devops-jenkins
  name: devops-jenkins
  namespace: kubesphere-system
---
apiVersion: v1
kind: Secret
metadata:
  namespace: kubesphere-system
  name: devops-jenkins-sa
  annotations:
    kubernetes.io/service-account.name: devops-jenkins
type: kubernetes.io/service-account-token
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app: devops-jenkins
  name: devops-jenkins-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: devops-jenkins
  namespace: kubesphere-system

---

apiVersion: v1
data:
  jenkins.yaml: |
    credentials:
      system:
        domainCredentials:
          - credentials:
              - fileSystemServiceAccountCredential:
                  id: "k8s-service-account"
    jenkins:
      mode: EXCLUSIVE
      numExecutors: 0
      scmCheckoutRetryCount: 2
      disableRememberMe: true

      clouds:
        - kubernetes:
            name: "kubernetes"
            serverUrl: "https://kubernetes.default"
            skipTlsVerify: true
            namespace: "kubesphere-devops-worker"
            credentialsId: "k8s-service-account"
            jenkinsUrl: "http://devops-jenkins.kubesphere-devops-system:80"
            jenkinsTunnel: "devops-jenkins-agent.kubesphere-devops-system:50000"
            containerCapStr: "10"
            connectTimeout: "60"
            readTimeout: "60"
            maxRequestsPerHostStr: "32"
            templates:
              - name: "base"
                namespace: "kubesphere-devops-worker"
                label: "base"
                nodeUsageMode: "NORMAL"
                idleMinutes: 0
                containers:
                - name: "base"
                  image: "kubespheredev/builder-base:v3.2.2-podman"
                  command: "cat"
                  args: ""
                  ttyEnabled: true
                  privileged: true
                  resourceRequestCpu: "100m"
                  resourceLimitCpu: "4000m"
                  resourceRequestMemory: "100Mi"
                  resourceLimitMemory: "8192Mi"
                - name: "jnlp"
                  image: "jenkins/inbound-agent:4.10-2"
                  args: "^${computer.jnlpmac} ^${computer.name}"
                  resourceRequestCpu: "50m"
                  resourceLimitCpu: "500m"
                  resourceRequestMemory: "400Mi"
                  resourceLimitMemory: "1536Mi"
                workspaceVolume:
                  emptyDirWorkspaceVolume:
                    memory: false
                volumes:
                - hostPathVolume:
                    hostPath: "/var/run/docker.sock"
                    mountPath: "/var/run/docker.sock"
                - hostPathVolume:
                    hostPath: "/var/data/jenkins_sonar_cache"
                    mountPath: "/root/.sonar/cache"
                yaml: |
                  spec:
                    affinity:
                      nodeAffinity:
                        preferredDuringSchedulingIgnoredDuringExecution:
                        - weight: 1
                          preference:
                            matchExpressions:
                            - key: node-role.kubernetes.io/worker
                              operator: In
                              values:
                              - ci
                    tolerations:
                    - key: "node.kubernetes.io/ci"
                      operator: "Exists"
                      effect: "NoSchedule"
                    - key: "node.kubernetes.io/ci"
                      operator: "Exists"
                      effect: "PreferNoSchedule"
                    containers:
                    - name: "base"
                      resources:
                        requests:
                          ephemeral-storage: "1Gi"
                        limits:
                          ephemeral-storage: "10Gi"
                    securityContext:
                      fsGroup: 1000

              - name: "nodejs"
                namespace: "kubesphere-devops-worker"
                label: "nodejs"
                nodeUsageMode: "EXCLUSIVE"
                idleMinutes: 0
                containers:
                - name: "nodejs"
                  image: "kubespheredev/builder-nodejs:v3.2.0-podman"
                  command: "cat"
                  args: ""
                  ttyEnabled: true
                  privileged: true
                  resourceRequestCpu: "100m"
                  resourceLimitCpu: "4000m"
                  resourceRequestMemory: "100Mi"
                  resourceLimitMemory: "8192Mi"
                - name: "jnlp"
                  image: "jenkins/inbound-agent:4.10-2"
                  args: "^${computer.jnlpmac} ^${computer.name}"
                  resourceRequestCpu: "50m"
                  resourceLimitCpu: "500m"
                  resourceRequestMemory: "400Mi"
                  resourceLimitMemory: "1536Mi"
                workspaceVolume:
                  emptyDirWorkspaceVolume:
                    memory: false
                volumes:
                - hostPathVolume:
                    hostPath: "/var/run/docker.sock"
                    mountPath: "/var/run/docker.sock"
                - hostPathVolume:
                    hostPath: "/var/data/jenkins_nodejs_yarn_cache"
                    mountPath: "/root/.yarn"
                - hostPathVolume:
                    hostPath: "/var/data/jenkins_nodejs_npm_cache"
                    mountPath: "/root/.npm"
                - hostPathVolume:
                    hostPath: "/var/data/jenkins_sonar_cache"
                    mountPath: "/root/.sonar/cache"
                yaml: |
                  spec:
                    affinity:
                      nodeAffinity:
                        preferredDuringSchedulingIgnoredDuringExecution:
                        - weight: 1
                          preference:
                            matchExpressions:
                            - key: node-role.kubernetes.io/worker
                              operator: In
                              values:
                              - ci
                    tolerations:
                    - key: "node.kubernetes.io/ci"
                      operator: "Exists"
                      effect: "NoSchedule"
                    - key: "node.kubernetes.io/ci"
                      operator: "Exists"
                      effect: "PreferNoSchedule"
                    containers:
                    - name: "nodejs"
                      resources:
                        requests:
                          ephemeral-storage: "1Gi"
                        limits:
                          ephemeral-storage: "10Gi"
                    securityContext:
                      fsGroup: 1000

              - name: "maven"
                namespace: "kubesphere-devops-worker"
                label: "maven"
                nodeUsageMode: "EXCLUSIVE"
                idleMinutes: 0
                containers:
                - name: "maven"
                  image: "kubespheredev/builder-maven:v3.2.0-podman"
                  command: "cat"
                  args: ""
                  ttyEnabled: true
                  privileged: true
                  resourceRequestCpu: "100m"
                  resourceLimitCpu: "4000m"
                  resourceRequestMemory: "100Mi"
                  resourceLimitMemory: "8192Mi"
                - name: "jnlp"
                  image: "jenkins/inbound-agent:4.10-2"
                  args: "^${computer.jnlpmac} ^${computer.name}"
                  resourceRequestCpu: "50m"
                  resourceLimitCpu: "500m"
                  resourceRequestMemory: "400Mi"
                  resourceLimitMemory: "1536Mi"
                workspaceVolume:
                  emptyDirWorkspaceVolume:
                    memory: false
                volumes:
                - hostPathVolume:
                    hostPath: "/var/run/docker.sock"
                    mountPath: "/var/run/docker.sock"
                - hostPathVolume:
                    hostPath: "/var/data/jenkins_maven_cache"
                    mountPath: "/root/.m2"
                - hostPathVolume:
                    hostPath: "/var/data/jenkins_sonar_cache"
                    mountPath: "/root/.sonar/cache"
                yaml: |
                  spec:
                    affinity:
                      nodeAffinity:
                        preferredDuringSchedulingIgnoredDuringExecution:
                        - weight: 1
                          preference:
                            matchExpressions:
                            - key: node-role.kubernetes.io/worker
                              operator: In
                              values:
                              - ci
                    tolerations:
                    - key: "node.kubernetes.io/ci"
                      operator: "Exists"
                      effect: "NoSchedule"
                    - key: "node.kubernetes.io/ci"
                      operator: "Exists"
                      effect: "PreferNoSchedule"
                    containers:
                    - name: "maven"
                      resources:
                        requests:
                          ephemeral-storage: "1Gi"
                        limits:
                          ephemeral-storage: "10Gi"
                      volumeMounts:
                      - name: config-volume
                        mountPath: /opt/apache-maven-3.5.3/conf/settings.xml
                        subPath: settings.xml
                    volumes:
                      - name: config-volume
                        configMap:
                          name: ks-devops-agent
                          items:
                          - key: MavenSetting
                            path: settings.xml
                    securityContext:
                      fsGroup: 1000

              - name: "mavenjdk11"
                label: "jdk11 maven java"
                inheritFrom: "maven"
                containers:
                - name: "maven"
                  image: "kubespheredev/builder-maven:v3.2.1-jdk11-podman"

              - name: "go"
                namespace: "kubesphere-devops-worker"
                label: "go"
                nodeUsageMode: "EXCLUSIVE"
                idleMinutes: 0
                containers:
                - name: "go"
                  image: "kubespheredev/builder-go:v3.2.0-podman"
                  command: "cat"
                  args: ""
                  ttyEnabled: true
                  privileged: true
                  resourceRequestCpu: "100m"
                  resourceLimitCpu: "4000m"
                  resourceRequestMemory: "100Mi"
                  resourceLimitMemory: "8192Mi"
                - name: "jnlp"
                  image: "jenkins/inbound-agent:4.10-2"
                  args: "^${computer.jnlpmac} ^${computer.name}"
                  resourceRequestCpu: "50m"
                  resourceLimitCpu: "500m"
                  resourceRequestMemory: "400Mi"
                  resourceLimitMemory: "1536Mi"
                workspaceVolume:
                  emptyDirWorkspaceVolume:
                    memory: false
                volumes:
                - hostPathVolume:
                    hostPath: "/var/run/docker.sock"
                    mountPath: "/var/run/docker.sock"
                - hostPathVolume:
                    hostPath: "/var/data/jenkins_go_cache"
                    mountPath: "/home/jenkins/go/pkg"
                - hostPathVolume:
                    hostPath: "/var/data/jenkins_sonar_cache"
                    mountPath: "/root/.sonar/cache"
                yaml: |
                  spec:
                    affinity:
                      nodeAffinity:
                        preferredDuringSchedulingIgnoredDuringExecution:
                        - weight: 1
                          preference:
                            matchExpressions:
                            - key: node-role.kubernetes.io/worker
                              operator: In
                              values:
                              - ci
                    tolerations:
                    - key: "node.kubernetes.io/ci"
                      operator: "Exists"
                      effect: "NoSchedule"
                    - key: "node.kubernetes.io/ci"
                      operator: "Exists"
                      effect: "PreferNoSchedule"
                    containers:
                    - name: "go"
                      resources:
                        requests:
                          ephemeral-storage: "1Gi"
                        limits:
                          ephemeral-storage: "10Gi"
                    securityContext:
                      fsGroup: 1000

              - name: "go16"
                label: "go16"
                inheritFrom: "go"
                containers:
                - name: "go"
                  image: "kubespheredev/builder-go:v3.2.2-1.16-podman"
              - name: "go17"
                label: "go17"
                inheritFrom: "go"
                containers:
                - name: "go"
                  image: "kubespheredev/builder-go:v3.2.2-1.17-podman"
              - name: "go18"
                label: "go18"
                inheritFrom: "go"
                containers:
                - name: "go"
                  image: "kubespheredev/builder-go:v3.2.2-1.18-podman"

              - name: "python"
                namespace: "kubesphere-devops-worker"
                label: "python"
                nodeUsageMode: "EXCLUSIVE"
                idleMinutes: 0
                containers:
                - name: "python"
                  image: "kubespheredev/builder-python:v3.2.0-podman"
                  command: "cat"
                  args: ""
                  ttyEnabled: true
                  privileged: true
                  resourceRequestCpu: "100m"
                  resourceLimitCpu: "4000m"
                  resourceRequestMemory: "100Mi"
                  resourceLimitMemory: "8192Mi"
                - name: "jnlp"
                  image: "jenkins/inbound-agent:4.10-2"
                  args: "^${computer.jnlpmac} ^${computer.name}"
                  resourceRequestCpu: "50m"
                  resourceLimitCpu: "500m"
                  resourceRequestMemory: "400Mi"
                  resourceLimitMemory: "1536Mi"
                workspaceVolume:
                  emptyDirWorkspaceVolume:
                    memory: false
                volumes:
                - hostPathVolume:
                    hostPath: "/var/run/docker.sock"
                    mountPath: "/var/run/docker.sock"
                - hostPathVolume:
                    hostPath: "/var/data/jenkins_python_pip_cache"
                    mountPath: "/root/.cache/pip"
                - hostPathVolume:
                    hostPath: "/var/data/jenkins_python_pipenv_cache"
                    mountPath: "/root/.local/share/virtualenvs"
                - hostPathVolume:
                    hostPath: "/var/data/jenkins_sonar_cache"
                    mountPath: "/root/.sonar/cache"
                yaml: |
                  spec:
                    affinity:
                      nodeAffinity:
                        preferredDuringSchedulingIgnoredDuringExecution:
                        - weight: 1
                          preference:
                            matchExpressions:
                            - key: node-role.kubernetes.io/worker
                              operator: In
                              values:
                              - ci
                    tolerations:
                    - key: "node.kubernetes.io/ci"
                      operator: "Exists"
                      effect: "NoSchedule"
                    - key: "node.kubernetes.io/ci"
                      operator: "Exists"
                      effect: "PreferNoSchedule"
                    containers:
                    - name: "python"
                      resources:
                        requests:
                          ephemeral-storage: "1Gi"
                        limits:
                          ephemeral-storage: "10Gi"
                    securityContext:
                      fsGroup: 1000

      securityRealm:
        ldap:
          configurations:
          - displayNameAttributeName: "uid"
            groupSearchBase: "ou=Groups"
            groupSearchFilter: "(&(objectClass=posixGroup)(cn={0}))"
            inhibitInferRootDN: false
            managerDN: "cn=admin,dc=kubesphere,dc=io"
            managerPasswordSecret: "admin"
            rootDN: "dc=kubesphere,dc=io"
            server: "ldap://openldap.kubesphere-system.svc:389"
            userSearch: "(&(objectClass=inetOrgPerson)(|(uid={0})(mail={0})))"
            userSearchBase: "ou=Users"
          disableMailAddressResolver: false
          disableRolePrefixing: true
          groupIdStrategy: "caseInsensitive"
          userIdStrategy: "caseInsensitive"


    unclassified:
      location:
        url: "http://jenkins.devops.kubesphere.local"
      kubespheretokenauthglobalconfiguration:
        cacheConfiguration:
          size: 20
          ttl: 300
        enabled: true
        server: "http://devops-apiserver.kubesphere-devops-system:9090/"
      eventDispatcher:
        receiver: "http://devops-apiserver.kubesphere-devops-system:9090/v1alpha3/webhooks/jenkins"
      gitLabServers:
        servers:
        - name: "https://gitlab.com"
          serverUrl: "https://gitlab.com"

kind: ConfigMap
metadata:
  name: jenkins-casc-config
  namespace: kubesphere-system

---

apiVersion: v1
data:
  jenkins-admin-password: bW9oYW1lZA==
  jenkins-admin-user: YWRtaW4=
kind: Secret
metadata:    
  name: devops-jenkins
  namespace: kubesphere-system
type: Opaque
---
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: devops-jenkins
  name: devops-jenkins
  namespace: kubesphere-system
spec:
  serviceAccountName: devops-jenkins
  containers:
  - args:
    - --argumentsRealm.passwd.$(ADMIN_USER)=$(ADMIN_PASSWORD)
    - --argumentsRealm.roles.$(ADMIN_USER)=admin
    env:
    - name: JAVA_TOOL_OPTIONS
      value: '-XX:InitialRAMPercentage=70 -XX:MaxRAMPercentage=70 -XX:MaxRAM=4G -Dhudson.slaves.NodeProvisioner.initialDelay=20
        -Dhudson.slaves.NodeProvisioner.MARGIN=50 -Dhudson.slaves.NodeProvisioner.MARGIN0=0.85
        -Dhudson.model.LoadStatistics.clock=5000 -Dhudson.model.LoadStatistics.decay=0.2
        -Dhudson.slaves.NodeProvisioner.recurrencePeriod=5000 -Dhudson.security.csrf.DefaultCrumbIssuer.EXCLUDE_SESSION_ID=true
        -Dio.jenkins.plugins.casc.ConfigurationAsCode.initialDelay=10000 -Djenkins.install.runSetupWizard=false
        -XX:+AlwaysPreTouch -XX:+HeapDumpOnOutOfMemoryError -XX:+UseG1GC -XX:+UseStringDeduplication
        -XX:+ParallelRefProcEnabled -XX:+DisableExplicitGC -XX:+UnlockDiagnosticVMOptions
        -XX:+UnlockExperimentalVMOptions '
    - name: JENKINS_OPTS
    - name: ADMIN_PASSWORD
      valueFrom:
        secretKeyRef:
          key: jenkins-admin-password
          name: devops-jenkins
    - name: ADMIN_USER
      valueFrom:
        secretKeyRef:
          key: jenkins-admin-user
          name: devops-jenkins
    - name: CASC_JENKINS_CONFIG
      value: /var/jenkins_home/casc_configs/jenkins.yaml
    - name: CASC_MERGE_STRATEGY
      value: override
    - name: com.sun.jndi.ldap.connect.timeout
      value: "60000"
    - name: com.sun.jndi.ldap.read.timeout
      value: "60000"
    - name: kubernetes.connection.timeout
      value: "60000"
    - name: kubernetes.request.timeout
      value: "60000"
    - name: EMAIL_SMTP_HOST
      value: mail.example.com
    - name: EMAIL_SMTP_PORT
      value: "465"
    - name: EMAIL_USE_SSL
      value: "false"
    - name: EMAIL_FROM_NAME
      value: KubeSphere
    - name: EMAIL_FROM_ADDR
      value: admin@example.com
    - name: EMAIL_FROM_PASS
      value: P@ssw0rd
    image: ghcr.io/mohamed-rafraf/kn-jenkins:2.426.3-jdk17

    livenessProbe:
      failureThreshold: 12
      httpGet:
        path: /login
        port: http
        scheme: HTTP
      initialDelaySeconds: 90
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 5
    name: devops-jenkins
    ports:
    - containerPort: 8080
      name: http
      protocol: TCP
    - containerPort: 50000
      name: slavelistener
      protocol: TCP
    readinessProbe:
      failureThreshold: 12
      httpGet:
        path: /login
        port: http
        scheme: HTTP
      initialDelaySeconds: 38
      periodSeconds: 2
      successThreshold: 1
      timeoutSeconds: 2
    resources:
      limits:
        cpu: "1"
        memory: 4Gi
      requests:
        cpu: 500m
        memory: 4Gi
    volumeMounts:
    - mountPath: /var/jenkins_home/casc_configs
      name: casc-config
      readOnly: true
    - mountPath: /var/jenkins_home
      name: jenkins-home
    - mountPath: /var/jenkins_config
      name: jenkins-config
      readOnly: true
    - mountPath: /usr/share/jenkins/ref/secrets/
      name: secrets-dir
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  initContainers:
  - command:
    - sh
    - /var/jenkins_config/apply_config.sh
    env:
    - name: ADMIN_PASSWORD
      valueFrom:
        secretKeyRef:
          key: jenkins-admin-password
          name: devops-jenkins
    - name: ADMIN_USER
      valueFrom:
        secretKeyRef:
          key: jenkins-admin-user
          name: devops-jenkins
    image: ghcr.io/mohamed-rafraf/kn-jenkins:2.426.3-jdk17
    name: copy-default-config
    resources:
      limits:
        cpu: "1"
        memory: 4Gi
      requests:
        cpu: 500m
        memory: 4Gi
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /var/jenkins_home
      name: jenkins-home
    - mountPath: /var/jenkins_config
      name: jenkins-config
    - mountPath: /usr/share/jenkins/ref/secrets/
      name: secrets-dir
  securityContext:
    runAsUser: 0
  volumes:
  - configMap:
      defaultMode: 420
      name: jenkins-casc-config
    name: casc-config
  - configMap:
      defaultMode: 420
      name: devops-jenkins
    name: jenkins-config
  - emptyDir: {}
    name: secrets-dir
  - name: jenkins-home
    persistentVolumeClaim:
      claimName: devops-jenkins

---

apiVersion: v1
kind: Service
metadata:
  name: devops-jenkins
  namespace: kubesphere-system
spec:
  ipFamilies:
  - IPv4
  ipFamilyPolicy: SingleStack
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: devops-jenkins
  sessionAffinity: None
  type: ClusterIP
status:
  loadBalancer: {}

---

apiVersion: v1
kind: Service
metadata:
  name: devops-jenkins-agent
  namespace: kubesphere-system
spec:
  ipFamilies:
  - IPv4
  ipFamilyPolicy: SingleStack
  ports:
  - name: slavelistener
    port: 50000
    protocol: TCP
    targetPort: 50000
  selector:
    app: devops-jenkins
  type: ClusterIP
status:
  loadBalancer: {}

---
